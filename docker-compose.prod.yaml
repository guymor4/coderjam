services:
  postgres:
    platform: linux/amd64 # comment if you want to build for your native os (e.g. arm for you macOS)
    image: postgres:15
    container_name: coderjam-postgres-prod
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: coderjam
      POSTGRES_USER: coderjam
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-coderjam123}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U coderjam -d coderjam"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - coderjam-network

  umami:
    platform: linux/amd64 # comment if you want to build for your native os (e.g. arm for you macOS)
    image: ghcr.io/umami-software/umami:postgresql-latest
    container_name: umami
    ports:
      - "6060:3000"
    environment:
      DATABASE_TYPE: postgresql
    restart: unless-stopped
    env_file:
      - ./.env.prod
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - coderjam-network

  webapp-1:
    platform: linux/amd64 # comment if you want to build for your native os (e.g. arm for you macOS)
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: sharkdx/coderjam-webapp:${APP_VERSION:-latest}
    container_name: coderjam-webapp-1
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - APP_VERSION=${APP_VERSION:-latest}
      - PORT=8080
    env_file:
      - ./.env.prod
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - coderjam-network

  webapp-2:
    platform: linux/amd64 # comment if you want to build for your native os (e.g. arm for you macOS)
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: sharkdx/coderjam-webapp:${APP_VERSION:-latest}
    container_name: coderjam-webapp-2
    ports:
      - "8081:8080"
    environment:
      - NODE_ENV=production
      - APP_VERSION=${APP_VERSION:-latest}
      - PORT=8080
    env_file:
      - ./.env.prod
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - coderjam-network

  webapp-3:
    platform: linux/amd64 # comment if you want to build for your native os (e.g. arm for you macOS)
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: sharkdx/coderjam-webapp:${APP_VERSION:-latest}
    container_name: coderjam-webapp-3
    ports:
      - "8082:8080"
    environment:
      - NODE_ENV=production
      - APP_VERSION=${APP_VERSION:-latest}
      - PORT=8080
    env_file:
      - ./.env.prod
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - coderjam-network

volumes:
  postgres_data_prod:

networks:
  coderjam-network:
    driver: bridge